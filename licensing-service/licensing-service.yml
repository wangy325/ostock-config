example:
  property: I AM THE DEFAULT
  
  # 应用服务 WEB 访问端口
server:
  port: 8080
  
  # jpa
spring:
  jpa:
    hibernate:
      ddl-auto: none
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    database: POSTGRESQL
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  database:
    driver-class-name: org.postgresql.Driver
  datasource:
    platform: postgres
    testWhileIdle: true
    validationQuery: SELECT 1
  # loadbalancer
  cloud:
    loadbalancer:
      health-check:
        initial-delay: 1s
        interval: 30s
      cache:
        caffeine:
          spec: initialCapacity=10, maximumSize=50
        ttl: 30
      stats:
        micrometer:
          enabled: true

# eureka client
eureka:
  instance:
    preferIpAddress: true
  client:
    registry-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eurekaserver:8070/eureka


management:
  endpoints:
    web:
      exposure:
        include: '*'
    enabled-by-default: true
    jmx:
      exposure:
        include: '*'
  endpoint:
    health:
      enabled: true
      show-details: always
  health:
    db:
      enabled: false
    diskspace:
      enabled: false

# circuitbreaker
resilience4j:
    circuitbreaker:
        instances:
            licenseService:
                register-health-indicator: true
                failure-rate-threshold: 10
                slow-call-rate-threshold: 90
                slow-call-duration-threshold: 10s
                permitted-number-of-calls-in-half-open-state: 10
                sliding-window-size: 10
                sliding-window-type: COUNT_BASED
                minimum-number-of-calls: 10
                wait-duration-in-open-state:  10s
                record-exceptions:
                    - org.springframework.web.client.HttpServerErrorException
                    - org.springframework.web.client.ResourceAccessException
                    - java.io.IOException
                    - java.util.concurrent.TimeoutException
# bulkhead
    bulkhead:
        instances:
            bulkheadLicenseService:
                max-concurrent-calls: 10
                max-wai-duration: 500ms
    thread-pool-bulkhead:
        instances:
            bulkheadLicenseService:
                core-thread-pool-size: 10
                max-thread-pool-size: 15
                queue-capacity: 1
                keep-alive-duration: 20ms
# ratelimiter
    ratelimiter:
        instances:
            reatelimiterLicenseService:
                limit-for-period: 5
                limit-refresh-period: 5000ms
                timeout-duration: 100ms
# retry
    retry:
        instances:
            retryLicenseService:
                max-attempts: 3
                wait-duration: 100ms
                retry-exceptions:
                    - java.util.concurrent.TimeoutException

# feign
feign:
  client:
    config:
      organization-service:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: full
        requestInterceptors:
          - com.learn.license.utils.UserContextInterceptor
        decode404: false
logging:
    level:
        com.netflix: WARN
        org.springframework.web: WARN
        com.learn: DEBUG